plot(density(TRN[[i]]),xlab=i,main='')
qqnorm(TRN[[i]],main=i)
qqline(TRN[[i]])
}
dev.off()
# response vars
for (i in colnames(cbind(TRN_cas,TRN_reg))){
boxplot(TRN[[i]],xlab=i,horizontal = TRUE)
plot(density(TRN[[i]]),xlab=i,main='')
qqnorm(TRN[[i]],main=i)
qqline(TRN[[i]])
}
dev.off()
bm_cas <- lm(TRN_cas ~ ., data = TRN_pred)
bm_cas <- lm(TRN$casual ~ ., data = TRN_pred)
# correlation
print(cor(TRN))
bm_cas <- lm(TRN$casual ~ ., data = TRN_pred)
bm_reg <- lm(TRN$registered ~ ., data = TRN_pred)
# assess results
shapiro.test(stdres(bm_cas))
anova(bm_cas)
plot(bm_cas$residuals)
plot(fitted(bm_cas),bm_cas$residuals)
X <- model.matrix(bm_cas)
X <- X[, -1]
cor(X)
lm.influence(bm_cas)
summary(lm.influence(bm_cas))
summary(lm.influence(bm_cas)$wt.res)
help('fitted')
plot(fitted(bm_reg),bm_cas$residuals)
# proportion vars
for (i in colnames(TRN_prop)){
boxplot(TRN[[i]],xlab=i,horizontal = TRUE)
plot(density(TRN[[i]]),xlab=i,main='')
qqnorm(TRN[[i]],main=i)
qqline(TRN[[i]])
}
dev.off()
# categorical vars
for (i in colnames(TRN_catg)){
hist(TRN[[i]],xlab=i,main='')
}
help('glm')
2^8
2^10
for (i in colnames(TRN_catg)){}
help("apply")
# response vars
for (i in colnames(TRN_resp)){
boxplot(TRN[[i]],xlab=i,horizontal = TRUE)
plot(density(TRN[[i]]),xlab=i,main='')
qqnorm(TRN[[i]],main=i)
qqline(TRN[[i]])
}
dev.off()
rm(list = ls())
# library(car)
# library(MASS)
# library(readr)
# library(dplyr)
library(ggplot2)
# Jef Masereel - Group 19
TST = read.csv("test.csv")
TRN = read.csv("train.csv")
# directory to write images to
img_dir <- '~/1_KUL/BME - 2e jaar/SEM2/SDA/Taak 2/images'
summary(TRN)
# categorical: season, holiday, workingday, weathersituation (factors)
TRN_catg <- TRN %>% select(season, holiday, workingday, weathersituation)
TRN_catg$season <- as.factor(TRN_catg$season)
TRN_catg$holiday <- as.factor(TRN_catg$holiday)
TRN_catg$workingday <- as.factor(TRN_catg$workingday)
TRN_catg$weathersituation <- as.factor(TRN_catg$weathersituation)
# proportions: temprature, feelingtemperature, humidity, windspeed
TRN_prop <- TRN %>% select(temperature, feelingtemperature, humidity, windspeed)
# all predictor variables
TRN_pred <- TRN %>% select(-casual,-registered)
# response variables (continuous, strictly positive)
TRN_resp <- TRN %>% select(casual,registered)
# categorical vars
for (i in colnames(TRN_catg)){
hist(TRN[[i]],xlab=i,main='')
}
# proportion vars
for (i in colnames(TRN_prop)){
boxplot(TRN[[i]],xlab=i,horizontal = TRUE)
plot(density(TRN[[i]]),xlab=i,main='')
qqnorm(TRN[[i]],main=i)
qqline(TRN[[i]])
}
dev.off()
# response vars
for (i in colnames(TRN_resp)){
boxplot(TRN[[i]],xlab=i,horizontal = TRUE)
plot(density(TRN[[i]]),xlab=i,main='')
qqnorm(TRN[[i]],main=i)
qqline(TRN[[i]])
}
plot(density(log(TRN$casual)))
shapiro.test(log(TRN$casual))
aa <- log(TRN$temperature/(1-TRN$temperature))
aa
plot(density(aa))
shapiro.test(aa)
shapiro.test(TRN$temperature)
help("inverse")
summary(TRN)
aa <- logit(TRN$humidity)
bb <- probit(TRN$humidity)
# library(car)
# library(MASS)
# library(readr)
# library(dplyr)
# library(ggplot2)
library(aod)
bb <- probit(TRN$humidity)
help("shapiro.test")
inst
install.packages('viabilitymetrics')
bb <- DINT(TRN$humidity)
install.packages(RNOmni)
install.packages('RNOmni')
library(RNOmni)
bb <- DINT(TRN$humidity)
bb <- asin(sqrt(TRN$humidity))
plot(density(bb))
shapiro.test(TRN$humidity)
shapiro.test(bb)
plot(density(TRN$humidity))
dev.off()
rm(list = ls())
# library(car)
# library(MASS)
# library(readr)
# library(dplyr)
# library(ggplot2)
library(aod)
# Jef Masereel - Group 19
TST = read.csv("test.csv")
TRN = read.csv("train.csv")
# directory to write images to
img_dir <- '~/1_KUL/BME - 2e jaar/SEM2/SDA/Taak 2/images'
summary(TRN)
# categorical: season, holiday, workingday, weathersituation (factors)
TRN_catg <- TRN %>% select(season, holiday, workingday, weathersituation)
TRN_catg$season <- as.factor(TRN_catg$season)
TRN_catg$holiday <- as.factor(TRN_catg$holiday)
TRN_catg$workingday <- as.factor(TRN_catg$workingday)
TRN_catg$weathersituation <- as.factor(TRN_catg$weathersituation)
# proportions: temprature, feelingtemperature, humidity, windspeed
TRN_prop <- TRN %>% select(temperature, feelingtemperature, humidity, windspeed)
# all predictor variables
TRN_pred <- TRN %>% select(-casual,-registered)
# response variables (continuous, strictly positive)
TRN_resp <- TRN %>% select(casual,registered)
# proportion vars
for (i in colnames(TRN_prop)){
boxplot(TRN[[i]],xlab=i,horizontal = TRUE)
plot(density(TRN[[i]]),xlab=i,main='')
qqnorm(TRN[[i]],main=i)
qqline(TRN[[i]])
}
shapiro.test(TRN$temperature).pval
shapiro.test(TRN$temperature)$pval
shapiro.test(TRN$temperature)$pvalue
help("shapiro.test")
shapiro.test(TRN$temperature)$p.value
for (i in colnames(TRN_prop)){
print(shapiro.test(TRN[[i]])$p.value)
}
for (i in colnames(TRN_prop)){
TRN[[i]] <- logit(TRN[[i]])
}
for (i in colnames(TRN_prop)){
print(shapiro.test(TRN[[i]])$p.value)
}
dev.off()
rm(list = ls())
# library(car)
# library(MASS)
# library(readr)
# library(dplyr)
# library(ggplot2)
library(aod)
# Jef Masereel - Group 19
TST = read.csv("test.csv")
TRN = read.csv("train.csv")
# directory to write images to
img_dir <- '~/1_KUL/BME - 2e jaar/SEM2/SDA/Taak 2/images'
summary(TRN)
# categorical: season, holiday, workingday, weathersituation (factors)
TRN_catg <- TRN %>% select(season, holiday, workingday, weathersituation)
TRN_catg$season <- as.factor(TRN_catg$season)
TRN_catg$holiday <- as.factor(TRN_catg$holiday)
TRN_catg$workingday <- as.factor(TRN_catg$workingday)
TRN_catg$weathersituation <- as.factor(TRN_catg$weathersituation)
# proportions: temprature, feelingtemperature, humidity, windspeed
TRN_prop <- TRN %>% select(temperature, feelingtemperature, humidity, windspeed)
# all predictor variables
TRN_pred <- TRN %>% select(-casual,-registered)
# response variables (continuous, strictly positive)
TRN_resp <- TRN %>% select(casual,registered)
for (i in colnames(TRN_prop)){
print(shapiro.test(TRN[[i]])$p.value)
}
for (i in colnames(TRN_prop)){
TRN[[i]] <- asin(sqrt(TRN[[i]]))
}
for (i in colnames(TRN_prop)){
print(shapiro.test(TRN[[i]])$p.value)
}
help(probitlink)
??probitlink
install.packages('VGAM')
??probitlink
dev.off()
rm(list = ls())
# library(car)
# library(MASS)
# library(readr)
# library(dplyr)
# library(ggplot2)
library(aod)
# Jef Masereel - Group 19
TST = read.csv("test.csv")
library(VGAM)
# Jef Masereel - Group 19
TST = read.csv("test.csv")
TRN = read.csv("train.csv")
# directory to write images to
img_dir <- '~/1_KUL/BME - 2e jaar/SEM2/SDA/Taak 2/images'
summary(TRN)
# categorical: season, holiday, workingday, weathersituation (factors)
TRN_catg <- TRN %>% select(season, holiday, workingday, weathersituation)
TRN_catg$season <- as.factor(TRN_catg$season)
TRN_catg$holiday <- as.factor(TRN_catg$holiday)
TRN_catg$workingday <- as.factor(TRN_catg$workingday)
TRN_catg$weathersituation <- as.factor(TRN_catg$weathersituation)
# proportions: temprature, feelingtemperature, humidity, windspeed
TRN_prop <- TRN %>% select(temperature, feelingtemperature, humidity, windspeed)
# all predictor variables
TRN_pred <- TRN %>% select(-casual,-registered)
# response variables (continuous, strictly positive)
TRN_resp <- TRN %>% select(casual,registered)
for (i in colnames(TRN_prop)){
print(shapiro.test(TRN[[i]])$p.value)
}
for (i in colnames(TRN_prop)){
TRN[[i]] <- probitlink(TRN[[i]])
}
for (i in colnames(TRN_prop)){
print(shapiro.test(TRN[[i]])$p.value)
}
mean(TRN$humidity)
dev.off()
rm(list = ls())
# library(car)
# library(MASS)
# library(readr)
# library(dplyr)
# library(ggplot2)
library(aod)
library(VGAM)
# Jef Masereel - Group 19
TST = read.csv("test.csv")
TRN = read.csv("train.csv")
# directory to write images to
img_dir <- '~/1_KUL/BME - 2e jaar/SEM2/SDA/Taak 2/images'
summary(TRN)
# categorical: season, holiday, workingday, weathersituation (factors)
TRN_catg <- TRN %>% select(season, holiday, workingday, weathersituation)
TRN_catg$season <- as.factor(TRN_catg$season)
TRN_catg$holiday <- as.factor(TRN_catg$holiday)
TRN_catg$workingday <- as.factor(TRN_catg$workingday)
TRN_catg$weathersituation <- as.factor(TRN_catg$weathersituation)
# proportions: temprature, feelingtemperature, humidity, windspeed
TRN_prop <- TRN %>% select(temperature, feelingtemperature, humidity, windspeed)
# all predictor variables
TRN_pred <- TRN %>% select(-casual,-registered)
# response variables (continuous, strictly positive)
TRN_resp <- TRN %>% select(casual,registered)
# categorical vars
for (i in colnames(TRN_catg)){
hist(TRN[[i]],xlab=i,main='')
}
# proportion vars
for (i in colnames(TRN_prop)){
boxplot(TRN[[i]],xlab=i,horizontal = TRUE)
plot(density(TRN[[i]]),xlab=i,main='')
qqnorm(TRN[[i]],main=i)
qqline(TRN[[i]])
}
dev.off()
for (i in colnames(TRN_prop)){
print(shapiro.test(TRN[[i]])$p.value)
}
mean(TRN$humidity)
TRN$humidity <- TRN$humidity + 0.025
mean(TRN$humidity)
for (i in colnames(TRN_prop)){
TRN[[i]] <- probitlink(TRN[[i]])
}
for (i in colnames(TRN_prop)){
print(shapiro.test(TRN[[i]])$p.value)
}
dev.off()
rm(list = ls())
# library(car)
# library(MASS)
# library(readr)
# library(dplyr)
# library(ggplot2)
library(aod)
library(VGAM)
# Jef Masereel - Group 19
TST = read.csv("test.csv")
TRN = read.csv("train.csv")
# directory to write images to
img_dir <- '~/1_KUL/BME - 2e jaar/SEM2/SDA/Taak 2/images'
summary(TRN)
# categorical: season, holiday, workingday, weathersituation (factors)
TRN_catg <- TRN %>% select(season, holiday, workingday, weathersituation)
TRN_catg$season <- as.factor(TRN_catg$season)
TRN_catg$holiday <- as.factor(TRN_catg$holiday)
TRN_catg$workingday <- as.factor(TRN_catg$workingday)
TRN_catg$weathersituation <- as.factor(TRN_catg$weathersituation)
# proportions: temprature, feelingtemperature, humidity, windspeed
TRN_prop <- TRN %>% select(temperature, feelingtemperature, humidity, windspeed)
# all predictor variables
TRN_pred <- TRN %>% select(-casual,-registered)
# response variables (continuous, strictly positive)
TRN_resp <- TRN %>% select(casual,registered)
# proportion vars
for (i in colnames(TRN_prop)){
boxplot(TRN[[i]],xlab=i,horizontal = TRUE)
plot(density(TRN[[i]]),xlab=i,main='')
qqnorm(TRN[[i]],main=i)
qqline(TRN[[i]])
}
# apply transformations
TRN$temperature <- logit(TRN$temperature)
dev.off()
rm(list = ls())
# library(car)
# library(MASS)
# library(readr)
# library(dplyr)
# library(ggplot2)
library(aod)
library(VGAM)
# Jef Masereel - Group 19
TST = read.csv("test.csv")
TRN = read.csv("train.csv")
# directory to write images to
img_dir <- '~/1_KUL/BME - 2e jaar/SEM2/SDA/Taak 2/images'
summary(TRN)
# categorical: season, holiday, workingday, weathersituation (factors)
TRN_catg <- TRN %>% select(season, holiday, workingday, weathersituation)
TRN_catg$season <- as.factor(TRN_catg$season)
TRN_catg$holiday <- as.factor(TRN_catg$holiday)
TRN_catg$workingday <- as.factor(TRN_catg$workingday)
TRN_catg$weathersituation <- as.factor(TRN_catg$weathersituation)
# proportions: temprature, feelingtemperature, humidity, windspeed
TRN_prop <- TRN %>% select(temperature, feelingtemperature, humidity, windspeed)
# all predictor variables
TRN_pred <- TRN %>% select(-casual,-registered)
# response variables (continuous, strictly positive)
TRN_resp <- TRN %>% select(casual,registered)
# categorical vars
for (i in colnames(TRN_catg)){
hist(TRN[[i]],xlab=i,main='')
}
dev.off()
# proportion vars
for (i in colnames(TRN_prop)){
boxplot(TRN[[i]],xlab=i,horizontal = TRUE)
plot(density(TRN[[i]]),xlab=i,main='')
qqnorm(TRN[[i]],main=i)
qqline(TRN[[i]])
}
# apply transformations
TRN$temperature <- logitlink(TRN$temperature)
TRN$feelingtemperature <- logitlink(TRN$feelingtemperature)
# TRN$humidity <- TRN$humidity # best to leave as is                sure??
TRN$windspeed <- probitlink(TRN$windspeed)
# inspecting results
# response vars
for (i in colnames(TRN_resp)){
boxplot(TRN[[i]],xlab=i,horizontal = TRUE)
plot(density(TRN[[i]]),xlab=i,main='')
qqnorm(TRN[[i]],main=i)
qqline(TRN[[i]])
}
dev.off()
rm(list = ls())
# library(car)
# library(MASS)
# library(readr)
# library(dplyr)
# library(ggplot2)
library(aod)
library(VGAM)
# Jef Masereel - Group 19
TST = read.csv("test.csv")
TRN = read.csv("train.csv")
# directory to write images to
img_dir <- '~/1_KUL/BME - 2e jaar/SEM2/SDA/Taak 2/images'
summary(TRN)
# categorical: season, holiday, workingday, weathersituation (factors)
TRN_catg <- TRN %>% select(season, holiday, workingday, weathersituation)
TRN_catg$season <- as.factor(TRN_catg$season)
TRN_catg$holiday <- as.factor(TRN_catg$holiday)
TRN_catg$workingday <- as.factor(TRN_catg$workingday)
TRN_catg$weathersituation <- as.factor(TRN_catg$weathersituation)
# proportions: temprature, feelingtemperature, humidity, windspeed
TRN_prop <- TRN %>% select(temperature, feelingtemperature, humidity, windspeed)
# all predictor variables
TRN_pred <- TRN %>% select(-casual,-registered)
# response variables (continuous, strictly positive)
TRN_resp <- TRN %>% select(casual,registered)
# categorical vars
for (i in colnames(TRN_catg)){
hist(TRN[[i]],xlab=i,main='')
}
# proportion vars
for (i in colnames(TRN_prop)){
boxplot(TRN[[i]],xlab=i,horizontal = TRUE)
plot(density(TRN[[i]]),xlab=i,main='')
qqnorm(TRN[[i]],main=i)
qqline(TRN[[i]])
}
dev.off()
# proportion vars
for (i in colnames(TRN_prop)){
boxplot(TRN[[i]],xlab=i,horizontal = TRUE)
plot(density(TRN[[i]]),xlab=i,main='')
qqnorm(TRN[[i]],main=i)
qqline(TRN[[i]])
}
# apply transformations
TRN$temperature <- logitlink(TRN$temperature)
TRN$feelingtemperature <- logitlink(TRN$feelingtemperature)
# TRN$humidity <- TRN$humidity # best to leave as is                sure??
TRN$windspeed <- probitlink(TRN$windspeed)
# inspecting results
# response vars
for (i in colnames(TRN_prop)){
boxplot(TRN[[i]],xlab=i,horizontal = TRUE)
plot(density(TRN[[i]]),xlab=i,main='')
qqnorm(TRN[[i]],main=i)
qqline(TRN[[i]])
}
setwd("~/1_KUL/BME - 2e jaar/SEM2/SDA/Oefenzittingen/Ex5")
library(rrcov)
library(MASS)
riverfish <- read.table("riverfish.txt", header = TRUE, quote = "\"")
str(riverfish)
head(riverfish)
riverfish$Site <- as.factor(riverfish$Site)
riverfish$Site
str(riverfish)
summary(riverfish)
## 1.1 Exploratory data analysis
boxplot(riverfish$Length,riverfish$Breadth, names = c("Length", "Breadth"))
plot(riverfish$Length, riverfish$Breadth)
plot(riverfish$Length, riverfish$Breadth,
col = ifelse(riverfish$Site == 1, "red", "blue"),
pch = ifelse(riverfish$Site == 1, 1, 19))
## 1.2 Regression analysis
fishlm <- lm(Breadth ~ ., data = riverfish) # . means include all variables
model.matrix(fishlm)
fishsum <- summary(fishlm)
fishsum
## 1.3
## Residual plots
e <- fishlm$residuals # = riverfish$Breadth - fitted(fishlm)
plot(e, xlab = "index", ylab = "Residual")                      #residual vs index
plot(fitted(fishlm), e, xlab = "fitted", ylab = "Residual")     #residual vs fitted
plot(riverfish$Length, e, ylab = "Residuals", xlab = "Length")  #residual vs independent var
abline(h = 0, lty = 2)
## test normality of standardized residuals
es <- stdres(fishlm)
qqnorm(es)
qqline(es)
shapiro.test(es) # p-value = 0.9649 H0: normally distributed
plot(es, xlab = "index", ylab = "standardized residual", ylim = c(-3, 3))  #index vs standardized residual
abline(h = -2.5, lty = 2)
abline(h =  2.5, lty = 2)
plot(fishlm) #provides some common lm plots
dev.off()
chicago <- read.table("chicago.txt", header = TRUE, quote = "\"")
str(chicago)
head(chicago)
## 2.1 Data analysis
boxplot(chicago[, 1:4])
boxplot(chicago[, 5], main = "involact")
boxplot(chicago[, 6], main = "income")
pairs(chicago)
# two outliers in theft and income, it would be best to remove those with the following code
outliers = which(chicago$theft > boxplot(chicago$theft)$stats[5, ])
chicago2 = chicago[-outliers, ]
pairs(chicago2)
# removing the outliers changes the whole analysis and makes most predictor variables not significant (try it!)
# just for illustrating the code we nevertheless continue with the full data set
chic2lm <- lm(involact ~ ., data = chicago2)
summary(chic2lm)
## 2.2 Model
chiclm <- lm(involact ~ ., data = chicago)
chicsum <- summary(chiclm)
chicsum
